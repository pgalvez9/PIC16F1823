CCS PCM C Compiler, Version 4.120, 31882               05-oct.-18 17:57

               Filename: C:\Users\Public\Apoyos\DiseñoMecatrónico\PIC16F1823\E-SDigitales\ADC.lst

               ROM used: 937 words (46%)
                         Largest free fragment is 1111
               RAM used: 17 (13%) at main() level
                         54 (42%) worst case
               Stack:    2 locations

*
0000:  MOVLP  00
0001:  GOTO   30E
0002:  NOP
.................... #INCLUDE <16F1823.H> 
.................... //////// Standard Header file for the PIC16F1823 device //////////////// 
.................... #device PIC16F1823 
.................... #list 
....................  
....................  
.................... #FUSES NOWDT, PUT, NOMCLR 
.................... #DEVICE ADC = 10 
.................... // El ADC funciona por default a 8 bits, con la línea superior se define a 10 bits 
.................... // Hiperterminal hercules para leer comunicaciones seriales 
....................  
.................... #USE DELAY (int = 32MHz) 
.................... #USE RS232(BAUD = 9600, XMIT = PIN_C4, RCV = PIN_C5) 
*
0169:  MOVLB  01
016A:  BCF    0E.4
016B:  MOVLB  02
016C:  BCF    0E.4
016D:  MOVLW  08
016E:  MOVLB  00
016F:  MOVWF  21
0170:  GOTO   171
0171:  NOP
0172:  BSF    21.7
0173:  GOTO   186
0174:  BCF    21.7
0175:  RRF    3A,F
0176:  MOVLB  02
0177:  BTFSC  03.0
0178:  BSF    0E.4
0179:  BTFSS  03.0
017A:  BCF    0E.4
017B:  MOVLB  00
017C:  BSF    21.6
017D:  GOTO   186
017E:  BCF    21.6
017F:  DECFSZ 21,F
0180:  GOTO   175
0181:  GOTO   182
0182:  NOP
0183:  MOVLB  02
0184:  BSF    0E.4
0185:  MOVLB  00
0186:  MOVLW  01
0187:  MOVWF  20
0188:  CLRF   04
0189:  DECFSZ 04,F
018A:  GOTO   189
018B:  DECFSZ 20,F
018C:  GOTO   188
018D:  MOVLW  0D
018E:  MOVWF  04
018F:  DECFSZ 04,F
0190:  GOTO   18F
0191:  GOTO   192
0192:  BTFSC  21.7
0193:  GOTO   174
0194:  BTFSC  21.6
0195:  GOTO   17E
0196:  RETURN
.................... // I^2 C 
....................  
.................... int main(void){ 
*
030E:  CLRF   05
030F:  CLRF   04
0310:  MOVLW  1F
0311:  ANDWF  03,F
0312:  MOVLW  F4
0313:  MOVLB  01
0314:  MOVWF  19
0315:  BCF    0E.4
0316:  MOVLB  02
0317:  BSF    0E.4
0318:  MOVLB  03
0319:  CLRF   0C
031A:  CLRF   0E
031B:  MOVLB  02
031C:  CLRF   12
031D:  CLRF   11
031E:  CLRF   14
031F:  CLRF   13
0320:  MOVLB  00
0321:  CLRF   28
0322:  CLRF   27
0323:  CLRF   26
0324:  CLRF   25
0325:  CLRF   2C
0326:  CLRF   2B
0327:  CLRF   2A
0328:  CLRF   29
....................    float s = 0; 
....................    float f = 0; 
....................     
....................    SETUP_ADC(0x60);  // PINx SERÁ ANALOGICO 
0329:  MOVLB  01
032A:  BCF    1E.4
032B:  BSF    1E.5
032C:  BSF    1E.6
032D:  BSF    1E.7
032E:  BSF    1D.0
....................    SETUP_ADC_PORTS(0x000100);   // ADC_CLOCK_DIV_64 
032F:  BCF    1E.0
0330:  BCF    1E.1
0331:  MOVLW  01
0332:  MOVLB  03
0333:  MOVWF  0C
0334:  MOVLW  00
0335:  MOVWF  0E
....................    SET_ADC_CHANNEL(0x000100); // CAMBIAR DE CANAL 
0336:  MOVLB  00
0337:  MOVWF  21
0338:  MOVLB  01
0339:  MOVF   1D,W
033A:  ANDLW  C3
033B:  MOVLB  00
033C:  IORWF  21,W
033D:  MOVLB  01
033E:  MOVWF  1D
....................  
....................    for(;;) { 
....................       s = READ_ADC(); 
033F:  BSF    1D.1
0340:  BTFSC  1D.1
0341:  GOTO   340
0342:  MOVF   1C,W
0343:  MOVLB  00
0344:  MOVWF  23
0345:  MOVLB  01
0346:  MOVF   1B,W
0347:  MOVLB  00
0348:  MOVWF  2D
0349:  MOVF   23,W
034A:  MOVWF  2E
034B:  GOTO   00B
034C:  MOVF   23,W
034D:  MOVWF  28
034E:  MOVF   22,W
034F:  MOVWF  27
0350:  MOVF   21,W
0351:  MOVWF  26
0352:  MOVF   20,W
0353:  MOVWF  25
....................       delay_us(2); 
0354:  MOVLW  05
0355:  MOVWF  20
0356:  DECFSZ 20,F
0357:  GOTO   356
....................       f = s*5/1023; 
0358:  MOVF   28,W
0359:  MOVWF  3D
035A:  MOVF   27,W
035B:  MOVWF  3C
035C:  MOVF   26,W
035D:  MOVWF  3B
035E:  MOVF   25,W
035F:  MOVWF  3A
0360:  CLRF   41
0361:  CLRF   40
0362:  MOVLW  20
0363:  MOVWF  3F
0364:  MOVLW  81
0365:  MOVWF  3E
0366:  CALL   029
0367:  MOVF   20,W
0368:  MOVWF  2D
0369:  MOVF   21,W
036A:  MOVWF  2E
036B:  MOVF   22,W
036C:  MOVWF  2F
036D:  MOVF   23,W
036E:  MOVWF  30
036F:  MOVWF  34
0370:  MOVF   22,W
0371:  MOVWF  33
0372:  MOVF   21,W
0373:  MOVWF  32
0374:  MOVF   20,W
0375:  MOVWF  31
0376:  CLRF   38
0377:  MOVLW  C0
0378:  MOVWF  37
0379:  MOVLW  7F
037A:  MOVWF  36
037B:  MOVLW  88
037C:  MOVWF  35
037D:  GOTO   09E
037E:  MOVF   23,W
037F:  MOVWF  2C
0380:  MOVF   22,W
0381:  MOVWF  2B
0382:  MOVF   21,W
0383:  MOVWF  2A
0384:  MOVF   20,W
0385:  MOVWF  29
....................       printf("POT = %03.2f \r", f); 
0386:  MOVLW  03
0387:  MOVLB  03
0388:  MOVWF  11
0389:  MOVLW  00
038A:  MOVWF  12
038B:  BCF    03.0
038C:  MOVLW  06
038D:  MOVLB  00
038E:  MOVWF  2D
038F:  GOTO   197
0390:  MOVLW  42
0391:  MOVWF  04
0392:  MOVF   2C,W
0393:  MOVWF  30
0394:  MOVF   2B,W
0395:  MOVWF  2F
0396:  MOVF   2A,W
0397:  MOVWF  2E
0398:  MOVF   29,W
0399:  MOVWF  2D
039A:  MOVLW  02
039B:  MOVWF  31
039C:  GOTO   22C
039D:  MOVLW  20
039E:  MOVWF  3A
039F:  CALL   169
03A0:  MOVLW  0D
03A1:  MOVWF  3A
03A2:  CALL   169
....................    } 
03A3:  MOVLB  01
03A4:  GOTO   33F
....................    return (0); 
03A5:  MOVLW  00
03A6:  MOVLB  00
03A7:  MOVWF  21
.................... } 
03A8:  SLEEP

Configuration Fuses:
   Word  1: 3F84   INTRC_IO NOWDT PUT NOMCLR NOPROTECT NOCPD BROWNOUT NOCLKOUT IESO FCMEN
   Word  2: 1EFF   NOWRT PLL_SW STVREN BORV19 NODEBUG NOLVP
