CCS PCM C Compiler, Version 4.120, 11074               29-sep.-18 10:19

               Filename: C:\Users\Peter\Desktop\GitClass\P16F1823\E-SDigitales\blink_led_directivas.lst

               ROM used: 110 words (5%)
                         Largest free fragment is 1937
               RAM used: 9 (7%) at main() level
                         26 (20%) worst case
               Stack:    2 worst case (1 in main + 1 for interrupts)

*
0000:  MOVLP  00
0001:  GOTO   04B
0002:  NOP
*
0004:  CLRF   03
0005:  CLRF   0A
0006:  MOVLB  00
0007:  MOVF   20,W
0008:  MOVWF  24
0009:  MOVF   21,W
000A:  MOVWF  25
000B:  MOVF   22,W
000C:  MOVWF  26
000D:  MOVF   23,W
000E:  MOVWF  27
000F:  BTFSS  0B.3
0010:  GOTO   013
0011:  BTFSC  0B.0
0012:  GOTO   01C
0013:  MOVF   24,W
0014:  MOVWF  20
0015:  MOVF   25,W
0016:  MOVWF  21
0017:  MOVF   26,W
0018:  MOVWF  22
0019:  MOVF   27,W
001A:  MOVWF  23
001B:  RETFIE
.................... #include <16f1823.h> 
.................... //////// Standard Header file for the PIC16F1823 device //////////////// 
.................... #device PIC16F1823 
.................... #list 
....................  
.................... #fuses NOWDT, PUT, NOMCLR 
.................... #use delay(int=32000000) 
*
0035:  MOVLW  20
0036:  MOVWF  05
0037:  MOVLW  08
0038:  MOVWF  04
0039:  MOVF   00,W
003A:  BTFSC  03.2
003B:  GOTO   049
003C:  MOVLW  0A
003D:  MOVWF  21
003E:  CLRF   20
003F:  DECFSZ 20,F
0040:  GOTO   03F
0041:  DECFSZ 21,F
0042:  GOTO   03E
0043:  MOVLW  5F
0044:  MOVWF  20
0045:  DECFSZ 20,F
0046:  GOTO   045
0047:  DECFSZ 00,F
0048:  GOTO   03C
0049:  MOVLP  00
004A:  GOTO   06C (RETURN)
....................  
.................... #INT_RA 
.................... void interrupcion() 
.................... { 
....................    if(input(pin_a0)==1) 
*
001C:  MOVLB  01
001D:  BSF    0C.0
001E:  MOVLB  00
001F:  BTFSS  0C.0
0020:  GOTO   027
....................    { 
....................    output_toggle(pin_c1); 
0021:  MOVLB  01
0022:  BCF    0E.1
0023:  MOVLW  02
0024:  MOVLB  02
0025:  XORWF  0E,F
0026:  MOVLB  00
....................    } 
....................    if(input(pin_a1)==1) 
0027:  MOVLB  01
0028:  BSF    0C.1
0029:  MOVLB  00
002A:  BTFSS  0C.1
002B:  GOTO   032
....................    { 
....................    output_toggle(pin_c2); 
002C:  MOVLB  01
002D:  BCF    0E.2
002E:  MOVLW  04
002F:  MOVLB  02
0030:  XORWF  0E,F
0031:  MOVLB  00
....................    } 
....................     
.................... } 
....................  
0032:  BCF    0B.0
0033:  MOVLP  00
0034:  GOTO   013
.................... void main() 
.................... { 
*
004B:  CLRF   05
004C:  CLRF   04
004D:  MOVLW  1F
004E:  ANDWF  03,F
004F:  MOVLW  F4
0050:  MOVLB  01
0051:  MOVWF  19
0052:  MOVLB  03
0053:  CLRF   0C
0054:  CLRF   0E
0055:  MOVLB  02
0056:  CLRF   12
0057:  CLRF   11
0058:  CLRF   14
0059:  CLRF   13
....................    enable_interrupts(INT_RA0); 
005A:  BSF    0B.3
005B:  MOVLB  07
005C:  BSF    11.0
005D:  BSF    12.0
....................    enable_interrupts(INT_RA1); 
005E:  BSF    0B.3
005F:  BSF    11.1
0060:  BSF    12.1
....................    enable_interrupts(GLOBAL); 
0061:  MOVLW  C0
0062:  IORWF  0B,F
....................    while(1) 
....................    {   
....................       output_toggle(pin_c0); 
0063:  MOVLB  01
0064:  BCF    0E.0
0065:  MOVLW  01
0066:  MOVLB  02
0067:  XORWF  0E,F
....................       delay_ms(100); 
0068:  MOVLW  64
0069:  MOVLB  00
006A:  MOVWF  28
006B:  GOTO   035
....................    } 
006C:  MOVLB  07
006D:  GOTO   063
.................... } 
....................  
006E:  SLEEP

Configuration Fuses:
   Word  1: 3F84   INTRC_IO NOWDT PUT NOMCLR NOPROTECT NOCPD BROWNOUT NOCLKOUT IESO FCMEN
   Word  2: 1EFF   NOWRT PLL_SW STVREN BORV19 NODEBUG NOLVP
