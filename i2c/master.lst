CCS PCM C Compiler, Version 4.120, 11074               06-oct.-18 16:55

               Filename: C:\Users\Peter\Desktop\GitClass\P16F1823\i2c\master.lst

               ROM used: 360 words (18%)
                         Largest free fragment is 1688
               RAM used: 9 (7%) at main() level
                         29 (23%) worst case
               Stack:    2 locations

*
0000:  MOVLP  00
0001:  GOTO   10E
0002:  NOP
.................... #include <16f1823.h> 
.................... //////// Standard Header file for the PIC16F1823 device //////////////// 
.................... #device PIC16F1823 
.................... #list 
....................  
.................... #fuses NOWDT, PUT, NOMCLR //No watch dog timer, power up timer, no master clear 
.................... #use delay(int=32MHZ)    
*
0009:  MOVLW  20
000A:  MOVWF  05
000B:  MOVLW  09
000C:  MOVWF  04
000D:  MOVF   00,W
000E:  BTFSC  03.2
000F:  GOTO   01D
0010:  MOVLW  0A
0011:  MOVWF  21
0012:  CLRF   20
0013:  DECFSZ 20,F
0014:  GOTO   013
0015:  DECFSZ 21,F
0016:  GOTO   012
0017:  MOVLW  5F
0018:  MOVWF  20
0019:  DECFSZ 20,F
001A:  GOTO   019
001B:  DECFSZ 00,F
001C:  GOTO   010
001D:  RETURN
.................... #use RS232(baud=9600,XMIT=pin_c4,RCV=pin_c5) 
*
0048:  MOVLB  01
0049:  BCF    0E.4
004A:  MOVLB  02
004B:  BCF    0E.4
004C:  MOVLW  08
004D:  MOVLB  00
004E:  MOVWF  21
004F:  GOTO   050
0050:  NOP
0051:  BSF    21.7
0052:  GOTO   065
0053:  BCF    21.7
0054:  RRF    2D,F
0055:  MOVLB  02
0056:  BTFSC  03.0
0057:  BSF    0E.4
0058:  BTFSS  03.0
0059:  BCF    0E.4
005A:  MOVLB  00
005B:  BSF    21.6
005C:  GOTO   065
005D:  BCF    21.6
005E:  DECFSZ 21,F
005F:  GOTO   054
0060:  GOTO   061
0061:  NOP
0062:  MOVLB  02
0063:  BSF    0E.4
0064:  MOVLB  00
0065:  MOVLW  01
0066:  MOVWF  20
0067:  CLRF   04
0068:  DECFSZ 04,F
0069:  GOTO   068
006A:  DECFSZ 20,F
006B:  GOTO   067
006C:  MOVLW  0D
006D:  MOVWF  04
006E:  DECFSZ 04,F
006F:  GOTO   06E
0070:  GOTO   071
0071:  BTFSC  21.7
0072:  GOTO   053
0073:  BTFSC  21.6
0074:  GOTO   05D
0075:  RETURN
.................... #use I2C(master,SDA=pin_c1,SCL=pin_c0, FORCE_HW, STREAM=MASTER, fast)//maestro o esclavo,cuál pin es SDA, , forzar a que sea hw 
*
001E:  MOVLB  04
001F:  BCF    15.7
0020:  MOVLB  00
0021:  BCF    11.3
0022:  MOVF   29,W
0023:  MOVLB  04
0024:  MOVWF  11
0025:  MOVLW  02
0026:  BTFSC  15.7
0027:  GOTO   02F
0028:  MOVLB  00
0029:  BTFSS  11.3
002A:  GOTO   029
002B:  MOVLW  00
002C:  MOVLB  04
002D:  BTFSC  16.6
002E:  MOVLW  01
002F:  MOVLB  00
0030:  MOVWF  21
0031:  MOVLP  00
0032:  GOTO   13B (RETURN)
*
00AC:  MOVLB  04
00AD:  BCF    15.6
00AE:  BSF    16.3
00AF:  BTFSC  16.3
00B0:  GOTO   0AF
00B1:  MOVLB  00
00B2:  BTFSS  20.0
00B3:  GOTO   0B7
00B4:  MOVLB  04
00B5:  BCF    16.5
00B6:  MOVLB  00
00B7:  BTFSC  20.0
00B8:  GOTO   0BC
00B9:  MOVLB  04
00BA:  BSF    16.5
00BB:  MOVLB  00
00BC:  MOVLB  04
00BD:  BSF    16.4
00BE:  BTFSC  16.4
00BF:  GOTO   0BE
00C0:  MOVF   11,W
00C1:  MOVLB  00
00C2:  MOVWF  21
00C3:  MOVLP  00
00C4:  GOTO   147 (RETURN)
.................... #define slv1_w 0x50 //byte 50 a slv 1 
.................... #define slv1_r 0x51  
.................... #define slv2_w 0x60 
.................... #define slv2_r 0x61 
....................  
.................... void main() 
.................... {   
*
010E:  CLRF   05
010F:  CLRF   04
0110:  MOVLW  1F
0111:  ANDWF  03,F
0112:  MOVLW  F4
0113:  MOVLB  01
0114:  MOVWF  19
0115:  BCF    0E.4
0116:  MOVLB  02
0117:  BSF    0E.4
0118:  MOVLB  01
0119:  BSF    0E.0
011A:  BSF    0E.1
011B:  MOVLW  13
011C:  MOVLB  04
011D:  MOVWF  12
011E:  MOVLW  28
011F:  MOVWF  15
0120:  BCF    14.7
0121:  BCF    14.6
0122:  MOVLB  03
0123:  CLRF   0C
0124:  CLRF   0E
0125:  MOVLB  02
0126:  CLRF   12
0127:  CLRF   11
0128:  CLRF   14
0129:  CLRF   13
012A:  MOVLB  00
012B:  CLRF   25
012C:  CLRF   26
012D:  MOVLW  62
012E:  MOVWF  27
012F:  CLRF   28
....................    int b1=0; 
....................    int b2=0;  
....................    char s1= 'b'; 
....................    int s2=0; 
....................    while(true) 
....................    { 
....................       I2C_START();//Iniciar comunicación 
0130:  MOVLB  04
0131:  BSF    16.0
0132:  BTFSC  16.0
0133:  GOTO   132
....................       delay_ms(100); 
0134:  MOVLW  64
0135:  MOVLB  00
0136:  MOVWF  29
0137:  CALL   009
....................       b1=I2C_WRITE(0x61); 
0138:  MOVLW  61
0139:  MOVWF  29
013A:  GOTO   01E
013B:  MOVF   21,W
013C:  MOVWF  25
....................       printf("%u",b1); 
013D:  MOVF   25,W
013E:  MOVWF  29
013F:  MOVLW  1B
0140:  MOVWF  2A
0141:  GOTO   076
....................       delay_ms(100); 
0142:  MOVLW  64
0143:  MOVWF  29
0144:  CALL   009
....................       s1=I2C_READ(0); 
0145:  CLRF   20
0146:  GOTO   0AC
0147:  MOVF   21,W
0148:  MOVWF  27
....................       delay_ms(100); 
0149:  MOVLW  64
014A:  MOVWF  29
014B:  CALL   009
....................       I2C_STOP(); 
014C:  MOVLB  04
014D:  BSF    16.2
014E:  BTFSC  16.2
014F:  GOTO   14E
....................       printf("Dato: %c \r",s1); 
0150:  MOVLW  03
0151:  MOVLB  03
0152:  MOVWF  11
0153:  MOVLW  00
0154:  MOVWF  12
0155:  BCF    03.0
0156:  MOVLW  06
0157:  MOVLB  00
0158:  MOVWF  29
0159:  GOTO   0C5
015A:  MOVF   27,W
015B:  MOVWF  2D
015C:  CALL   048
015D:  MOVLW  20
015E:  MOVWF  2D
015F:  CALL   048
0160:  MOVLW  0D
0161:  MOVWF  2D
0162:  CALL   048
....................       delay_ms(100); 
0163:  MOVLW  64
0164:  MOVWF  29
0165:  CALL   009
....................    } 
0166:  GOTO   130
....................     
.................... } 
0167:  SLEEP

Configuration Fuses:
   Word  1: 3F84   INTRC_IO NOWDT PUT NOMCLR NOPROTECT NOCPD BROWNOUT NOCLKOUT IESO FCMEN
   Word  2: 1EFF   NOWRT PLL_SW STVREN BORV19 NODEBUG NOLVP
